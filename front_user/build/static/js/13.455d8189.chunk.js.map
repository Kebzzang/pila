{"version":3,"sources":["components/BookedClasses/MyClassElement.tsx","components/BookedClasses/MyClass.tsx","hooks/useFetchMyInfo.ts"],"names":["MyClassElement","element","cancelJoin","cancelCheck","contentArrowStyle","borderRight","iconStyle","background","width","height","className","equipmentType","style","float","courseDateTime","slice","marginTop","marginBottom","marginLeft","marginRight","teacher_name","title","moment","Button","target","id","block","variant","onClick","MyClass","userData","useSWR","fetcher","dedupingInterval","data","useState","cancel","setCancel","myJoins","userId","count","setData","useEffect","axios","get","withCredentials","then","r","useFetchMyInfo","now","sort","a","b","localeCompare","sortedMyJoins","setSortedMyJoins","myOption","setMyOption","console","log","option","sorted","useCallback","day","subtract","isAfter","course_id","delete","params","user_id","response","catch","error","alert","onChange","e","value","defaultValue","layout","map"],"mappings":"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","file":"static/js/13.455d8189.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport { FaUserCircle } from 'react-icons/all';\nimport moment from 'moment';\nimport Button from 'react-bootstrap/Button';\nimport { IClass } from '../../types/db';\n\ninterface ClassElement {\n  element: IClass;\n  cancelJoin: Function;\n  cancelCheck: Function;\n}\nconst MyClassElement: FC<ClassElement> = ({ element, cancelJoin, cancelCheck }) => {\n  const joinStyles = { background: '#05495e', width: '10px', height: '10px' };\n  return (\n    <VerticalTimelineElement contentArrowStyle={{ borderRight: 'transparent' }} key={element.id} iconStyle={joinStyles}>\n      <div className=\"date\">\n        {element.equipmentType}{' '}\n        <div style={{ float: 'right' }}>\n          {element.courseDateTime.slice(0, 10) + ' ' + element.courseDateTime.slice(11, 16)}\n        </div>\n      </div>\n      <hr style={{ marginTop: '10px', marginBottom: '10px', marginLeft: '0px', marginRight: '0px' }} />\n      <div className=\"description\">\n        <FaUserCircle />\n        &nbsp;&nbsp;\n        {element.teacher_name}\n        <br />\n        {element.title}\n      </div>\n      {cancelCheck(moment(element.courseDateTime)) && (\n        <Button\n          target={element.id}\n          block\n          style={{ float: 'right' }}\n          variant=\"info\"\n          onClick={() => cancelJoin(element.id)}\n        >\n          cancel\n        </Button>\n      )}\n    </VerticalTimelineElement>\n  );\n};\n\nexport default MyClassElement;\n","import React, { useCallback, useEffect, useState } from 'react';\n\nimport { VerticalTimeline } from 'react-vertical-timeline-component';\n\nimport useSWR from 'swr';\nimport fetcher from '../../utils/fetcher';\nimport useFetchMyInfo from '../../hooks/useFetchMyInfo';\nimport moment from 'moment';\nimport axios from 'axios';\nimport MyClassElement from './MyClassElement';\nimport Select from 'react-select';\nimport { IClass } from '../../types/db';\n//정렬 함수 만들어서 두 정렬? 아니면 선생님 별로 저열ㄹ 한 것들 모아서 모음 함수를 만들어주고 ...ㅠㅠ\nconst MyClass = () => {\n  const { data: userData } = useSWR(\n    'http://ec2-3-38-35-210.ap-northeast-2.compute.amazonaws.com:8080/api/v1/user/me',\n    fetcher,\n    {\n      dedupingInterval: 40000,\n    },\n  );\n  const options = [\n    { value: 'ascending', label: 'Ascending' },\n    { value: 'descending', label: 'Descending' },\n  ];\n\n  const [cancel, setCancel] = useState(false);\n\n  const myJoins = useFetchMyInfo(userData.id, cancel);\n  const now = moment();\n  const [sortedMyJoins, setSortedMyJoins] = useState<IClass[]>(\n    [...myJoins.data].sort((a, b) => a.courseDateTime.localeCompare(b.courseDateTime)),\n  );\n  const [myOption, setMyOption] = useState('ascending');\n\n  useEffect(() => {\n    console.log(1, myOption);\n\n    const sort = (option: string) => {\n      if (option === 'ascending') {\n        const sorted = [...myJoins.data].sort((a, b) => a.courseDateTime.localeCompare(b.courseDateTime));\n        setSortedMyJoins(sorted);\n      }\n      if (option === 'descending') {\n        const sorted = [...myJoins.data].sort((a, b) => b.courseDateTime.localeCompare(a.courseDateTime));\n        setSortedMyJoins(sorted);\n      }\n    };\n    sort(myOption);\n  }, [myOption, sortedMyJoins]);\n\n  const cancelCheck = useCallback(\n    (day: moment.Moment) => {\n      return day.subtract(1, 'day').isAfter(now);\n    },\n    [now],\n  );\n\n  const cancelJoin = (course_id: number) => {\n    axios\n      .delete('http://ec2-3-38-35-210.ap-northeast-2.compute.amazonaws.com:8080/api/v1/user/course/cancel', {\n        withCredentials: true,\n        params: { course_id: course_id, user_id: userData.id },\n      })\n      .then((response) => {\n        console.log('성공');\n        setCancel(!cancel);\n      })\n      .catch((error) => {\n        alert('problem');\n      });\n  };\n\n  return (\n    <div style={{ width: '400px', marginLeft: 'auto', marginTop: '20px', marginRight: 'auto' }}>\n      <select style={{ width: '100%' }} onChange={(e) => setMyOption(e.target.value)}>\n        <option defaultValue=\"ascending\" value=\"ascending\">\n          Ascending\n        </option>\n        <option value=\"descending\">Descending</option>\n      </select>\n      <VerticalTimeline layout={'1-column'}>\n        {sortedMyJoins.map((element) => (\n          <MyClassElement key={element.id} cancelCheck={cancelCheck} element={element} cancelJoin={cancelJoin} />\n        ))}\n      </VerticalTimeline>\n    </div>\n  );\n};\n\nexport default MyClass;\n","import { useEffect, useState } from 'react';\nimport { IClasses } from '../types/db';\nimport axios from 'axios';\n\nexport default function useFetchMyInfo(userId: number, cancel: boolean) {\n  const [data, setData] = useState<IClasses>({ count: 0, data: [] });\n  useEffect(() => {\n    axios\n      .get(`http://ec2-3-38-35-210.ap-northeast-2.compute.amazonaws.com:8080/api/v1/course/me/${userId}`, {\n        withCredentials: true,\n      })\n      .then((r) => {\n        setData(r.data);\n      });\n  }, [cancel, userId]);\n  return data;\n}\n"],"sourceRoot":""}