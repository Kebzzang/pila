{"version":3,"sources":["pages/signup/SignUp.tsx","utils/fetcher.ts","hooks/useInput.ts","pages/signup/style.tsx","layouts/Loading.tsx"],"names":["SignUp","data","useSWR","fetcher","useInput","username","onChangeUsername","email","onChangeEmail","password","setPassword","passwordCheck","setPasswordCheck","useState","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","loading","setLoading","onChangePassword","useCallback","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","axios","post","then","response","alert","catch","error","errorMsg","finally","to","id","type","name","onChange","url","get","withCredentials","initialData","setValue","Header","styled","header","Form","form","Label","label","Input","input","Button","button","Error","div","LinkContainer","p","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","Loading","classes","className","open"],"mappings":"yMAgIeA,UAtHA,WACb,IAAQC,EAASC,YAAO,yCAA0CC,KAA1DF,KAER,EAAqCG,YAAS,IAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA+BF,YAAS,IAAxC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,YAAS,IAA3C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA4CN,YAAS,IAArD,mBAAOO,EAAP,KAAwBC,EAAxB,KAEA,EAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAmBC,uBACvB,SAACC,GACCd,EAAYc,EAAEC,OAAOC,OACrBX,EAAiBS,EAAEC,OAAOC,QAAUf,KAEtC,CAACA,IAGGgB,EAAwBJ,uBAC5B,SAACC,GACCZ,EAAiBY,EAAEC,OAAOC,OAC1BX,EAAiBS,EAAEC,OAAOC,QAAUjB,KAEtC,CAACA,IAGGmB,EAAWL,uBACf,SAACC,GACCA,EAAEK,iBAEFR,GAAW,GACNP,IACHgB,QAAQC,IAAI,oDACZd,EAAe,IACfE,GAAiB,GACjBa,IACGC,KAAK,wCAAyC,CAC7C5B,WACAE,QACAE,aAEDyB,MAAK,SAACC,GACLL,QAAQC,IAAII,GACZhB,GAAiB,GACjBE,GAAW,GACXe,MAAM,mCAEPC,OAAM,SAACC,GACNR,QAAQC,IAAIO,EAAMH,UAClBlB,EAAeqB,EAAMH,SAASlC,KAAKsC,UACnClB,GAAW,MAEZmB,SAAQ,kBAGf,CAACnC,EAAUE,EAAOE,EAAUK,IAE9B,OAAII,EACK,cAAC,IAAD,CAAUuB,GAAG,MAGlBxC,EACK,cAAC,IAAD,CAAUwC,GAAG,UAGpB,sBAAKC,GAAG,YAAR,UACE,cAAC,IAAD,yBACA,eAAC,IAAD,CAAMd,SAAUA,EAAhB,UACE,eAAC,IAAD,CAAOc,GAAG,iBAAV,UACE,4CACA,8BACE,cAAC,IAAD,CAAOC,KAAK,OAAOD,GAAG,WAAWE,KAAK,WAAWlB,MAAOrB,EAAUwC,SAAUvC,UAG9ED,GAAY,cAAC,IAAD,mFACbW,GAAe,cAAC,IAAD,UAAQA,IACxB,eAAC,IAAD,CAAO0B,GAAG,cAAV,UACE,yCACA,8BACE,cAAC,IAAD,CAAOC,KAAK,QAAQD,GAAG,QAAQE,KAAK,QAAQlB,MAAOnB,EAAOsC,SAAUrC,UAGtED,GAAS,cAAC,IAAD,6EACX,eAAC,IAAD,CAAOmC,GAAG,iBAAV,UACE,4CACA,8BACE,cAAC,IAAD,CAAOC,KAAK,WAAWD,GAAG,WAAWE,KAAK,WAAWlB,MAAOjB,EAAUoC,SAAUvB,SAGpF,eAAC,IAAD,CAAOoB,GAAG,uBAAV,UACE,yDACA,8BACE,cAAC,IAAD,CACEC,KAAK,WACLD,GAAG,iBACHE,KAAK,iBACLlB,MAAOf,EACPkC,SAAUlB,MAGbb,GAAiB,cAAC,IAAD,mGAIpB,cAAC,IAAD,CAAQ6B,KAAK,SAAb,+BAEF,eAAC,IAAD,0CAEE,cAAC,IAAD,CAAMF,GAAG,SAAT,uBAEDrB,EAAU,cAAC,IAAD,IAAc,Q,gCC3H/B,qBAIejB,IAFC,SAAC2C,GAAD,OAAiBd,IAAMe,IAAID,EAAK,CAAEE,iBAAiB,IAAQd,MAAK,SAACC,GAAD,OAAcA,EAASlC,KAAKA,U,mDCU7FG,IARE,SAAU6C,GACzB,MAA0BpC,mBAASoC,GAAnC,mBAAOvB,EAAP,KAAcwB,EAAd,KAIA,MAAO,CAACxB,EAHQH,uBAAY,SAACC,GAC3B0B,EAAU1B,EAAEC,OAAOC,SAClB,IACqBwB,K,kTCPbC,EAASC,IAAOC,OAAV,2RAWNC,EAAOF,IAAOG,KAAV,qFAMJC,EAAQJ,IAAOK,MAAV,gPAcLC,EAAQN,IAAOO,MAAV,8rBAuBLC,EAASR,IAAOS,OAAV,8oBA8BNC,EAAQV,IAAOW,IAAV,+FAWLC,GALUZ,IAAOW,IAAV,qEAKSX,IAAOa,EAAV,qR,gCCjG1B,6CAIMC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,OAAQF,EAAME,OAAOC,OAAS,EAC9BC,MAAO,YAgBIC,IAVC,WACd,IAAMC,EAAUR,IAEhB,OACE,cAAC,IAAD,CAAUS,UAAWD,EAAQL,SAAUO,MAAI,EAA3C,SACE,cAAC,IAAD,CAAkBJ,MAAM","file":"static/js/9.342ae4dd.chunk.js","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport { Form, Label, Header, Input, LinkContainer, Button, Error } from './style';\nimport useInput from '../../hooks/useInput';\nimport axios from 'axios';\nimport { Redirect, Link } from 'react-router-dom';\n\nimport useSWR from 'swr';\nimport fetcher from '../../utils/fetcher';\nimport Loading from '../../layouts/Loading';\n\nconst SignUp = () => {\n  const { data } = useSWR('http://3.38.35.210:8080/api/v1/user/me', fetcher);\n\n  const [username, onChangeUsername] = useInput('');\n  const [email, onChangeEmail] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n\n  const [mismatchError, setMismatchError] = useState(false);\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const onChangePassword = useCallback(\n    (e) => {\n      setPassword(e.target.value);\n      setMismatchError(e.target.value !== passwordCheck);\n    },\n    [passwordCheck],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const onSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n      //console.log(email, username, password);\n      setLoading(true); //요청 시작 -> 로딩 시작 트루로 변경\n      if (!mismatchError) {\n        console.log('서버로 회원가입 gogo');\n        setSignUpError('');\n        setSignUpSuccess(false); //전에 했던 요청 데이터가 남아있지 않게 초기화해줌\n        axios\n          .post('http://3.38.35.210:8080/api/v1/signup', {\n            username,\n            email,\n            password,\n          })\n          .then((response) => {\n            console.log(response);\n            setSignUpSuccess(true);\n            setLoading(false); //요청 성공 로딩 끝\n            alert('SignUp Success! Login Please');\n          }) //성공\n          .catch((error) => {\n            console.log(error.response);\n            setSignUpError(error.response.data.errorMsg);\n            setLoading(false); //에러 발생, 로딩 끝\n          }) //실패\n          .finally(() => {}); //무조건 실행\n      }\n    },\n    [username, email, password, mismatchError],\n  );\n  if (signUpSuccess) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (data) {\n    return <Redirect to=\"/home\" />;\n  }\n  return (\n    <div id=\"container\">\n      <Header>Join Pilas</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"nickname-label\">\n          <span>Username</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={username} onChange={onChangeUsername} />\n          </div>\n        </Label>\n        {!username && <Error>유저네임을 입력해주세요.</Error>}\n        {signUpError && <Error>{signUpError}</Error>}\n        <Label id=\"email-label\">\n          <span>Email</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        {!email && <Error>이메일을 입력해주세요.</Error>}\n        <Label id=\"password-label\">\n          <span>Password</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>Confirm your Password</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n\n          {/*{signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}*/}\n        </Label>\n        <Button type=\"submit\">Create account</Button>\n      </Form>\n      <LinkContainer>\n        Already have an account?&nbsp;\n        <Link to=\"/login\">Log In</Link>\n      </LinkContainer>\n      {loading ? <Loading /> : ''}\n    </div>\n  );\n};\n\nexport default SignUp;\n","import axios from 'axios';\n\nconst fetcher = (url: string) => axios.get(url, { withCredentials: true }).then((response) => response.data.data);\n\nexport default fetcher;\n","import { ChangeEvent, Dispatch, SetStateAction, useCallback, useState } from 'react';\n\ntype ReturnTypes<T = any> = [T, (e: any) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T = any>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue((e.target.value as unknown) as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background-color: #14a0a0;\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(40, 180, 180, 0.9);\n    border: none;\n  }\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 0px 0 16px;\n  // font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n","import Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nimport React from 'react';\n\nconst Loading = () => {\n  const classes = useStyles();\n\n  return (\n    <Backdrop className={classes.backdrop} open>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nexport default Loading;\n"],"sourceRoot":""}